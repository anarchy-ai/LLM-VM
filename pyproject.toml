[project]
name = "llm_vm"
version = "0.1.55"
description = "An Open-Source AGI Server for Open-Source LLMs"
authors = [{ name = "Anarchy Team", email = "matt@anarchy.ai" }]


requires-python = ">=3.10" # this could be lower if need be
readme = "README.md"
license = { text = "MIT" }

dependencies = [
    "dynaconf>=3.2.0",
    "openai>=0.27.6",
    "numpy>=1.22.4",
    "watchdog>=3.0.0",
    "xdg>=6.0.0",
    "accelerate>=0.21.0",
    "transformers>=4.31.0",
    "ctransformers>=0.2.24",
    "flask>=2.3.2",
    "flask_cors>=4.0.0",
    "llama-index>=0.7.7",
    "python-Levenshtein>=0.21.1",
    "bs4>=0.0.1",
    "sentencepiece>=0.1.99",
    "sentence-transformers>=2.2.2",
    "requests>=2.26.0",
    "spacy>=3.5.3",
    "outlines>=0.0.1",
    "gradio>=3.42.0",                                                                                                                          # Specify the latest version of gradio
    "backoff>=2.2.1",
    "peft>=0.5.0",
    "trl>=0.7.2",
    "pinecone-client>=2.2.4",
    "PyPDF2>=3.0.1",
    "weaviate-client>=3.25.3",
    "python-dotenv>=1.0.0"
]

[project.optional-dependencies]
dev = ["black>=23.7.0", "mypy>=1.5.1"]

# todo: https://setuptools.pypa.io/en/latest/userguide/datafiles.html 

[project.scripts] # these names are just placeholders
#llm_vm_test_optimize = "tests.test_optimize:run_test_stub"
llm_vm_server = "llm_vm.server.main:cli"


llm_vm_run_agent = "llm_vm.agents.agent_interface:call_agent"
llm_vm_run_agent_backwards_chaining = "llm_vm.agents.BACKWARD_CHAINING.agent:BACKWARD_CHAINING_main"
llm_vm_run_agent_rebel = "llm_vm.agents.REBEL.agent:rebel_main"
llm_vm_run_agent_flat = "llm_vm.agents.FLAT.agent:flat_main"
# package_dir = {}

[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"] # this is the default i think

[tool.setuptools.package-data]
llm_vm = [
    "*.toml",
] # note how the left hand side, the key, needs to be the package name/namespace

# lets maybe try pytest # question all of this 
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests/",
    # "integration_tests", # this dir is for stuff that requires api key or server running
]
python_files = "*.py"
# python_classes = "Check"
# python_functions = "*_check"

[tool.mypy]
exclude = ['venv', '.venv', 'src/llm_vm/agents'] # agents is complicated

# these are strawman configs
[tool.black]
line-length = 140
target-version = ["py310"] # what does this do?
skip-string-normalization = true
exclude = '''
(
  /(
    \.mypy_cache
  )/
)
'''

