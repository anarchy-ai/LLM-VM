[tool.poetry]
name = "llm-vm"
version = "0.1.0"
description = "Taming LLMs to do whatever you want"
authors = ["Anarchy Team <matt@anarchy.ai>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
dynaconf = ">=3.2.0"
openai = ">=0.27.6"
numpy = ">=1.22.4"
watchdog = ">=3.0.0"
xdg = ">=6.0.0"
accelerate = ">=0.21.0"
transformers = ">=4.31.0"
flask = ">=2.3.2"
flask_cors = ">=4.0.0"
llama-index = ">=0.7.7"
python-Levenshtein = ">=0.21.1"
bs4 = ">=0.0.1"
sentencepiece = ">=0.1.99"
sentence-transformers = ">=2.2.2"
requests = ">=2.26.0"
spacy = ">=3.5.3"
outlines = ">=0.0.1"
en_core_web_md = {url = "https://github.com/explosion/spacy-models/releases/download/en_core_web_md-3.6.0/en_core_web_md-3.6.0-py3-none-any.whl"}
gradio = ">=3.42.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.1"
black = ">=23.7.0"
mypy = ">=1.5.1"
pylint = ">=2.17.5"
pre-commit = ">=3.4.0"

[tool.poetry.scripts]
#llm_vm_test_optimize = "tests.test_optimize:run_test_stub"
llm_vm_server = "llm_vm.server.main:cli"

llm_vm_run_agent = "llm_vm.agents.agent_interface:call_agent"
llm_vm_run_agent_backwards_chaining = "llm_vm.agents.BACKWARD_CHAINING.agent:BACKWARD_CHAINING_main"
llm_vm_run_agent_rebel = "llm_vm.agents.REBEL.agent:rebel_main"
llm_vm_run_agent_flat = "llm_vm.agents.FLAT.agent:flat_main"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests/",
    # "integration_tests", # this dir is for stuff that requires api key or server running
]
python_files = "*.py"
# python_classes = "Check"
# python_functions = "*_check"

[tool.mypy]
exclude = ['venv', '.venv','src/llm_vm/agents'] # agents is complicated

# these are strawman configs
[tool.black]
line-length = 140
target-version = ["py37"] # what does this do?
skip-string-normalization = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
